/* 전체 태그에 초기화 설정 */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box; 
}

/* 전체 body의 하위 모든 태그에 적용 */
body {
    background-color: #111;
    color: #fff;
}

section {
    padding: 40px 10%; /* 위아래40px 좌우10% */

}

section h2 { /* section의 모든 h2 적용*/
    font-size: 36px;
    margin-bottom: 20px;

}

section h3 {
    font-size: 30px;
    font-weight: 600;
    margin-bottom: 20px;

}

/* 헤더 부분 작업 */
header {
    width: 100%;
    height: 100vh;
    /* 1) 배경 이미지 : 해당 이미지의 경로를 잡는 속성
        url(../img/test3.jpg) 여기서 ..은 현재폴더 위치에서 한칸더 상위폴더로 이동
        2) 그라데이션 효과 
        linear-gradient([방향], 색상1, 색상2, 색상3...); 
        [방향]옵션 : top,bottom,left,각도 to right, 45deg...
        색상 : 시작색상, 끝 색상, 중간 등 여러개 지정가능
        rgba(r, g, b, a) : 빨, 초, 파, 투명도 0~1 
        ==> 현재 상태는 방향이 없어서 위아래 모두 같은색임.
        ====> 반투명 검정색을 만드는 목적임.*/
    background: linear-gradient(rgba(0, 0, 0, 0.6),rgba(0, 0, 0, 0.6)), url(../img/test3.jpg);
    background-size: cover;
    padding: 10px 8%; /* 위아래 10px, 좌우 8% */
    
    position: relative; /* header라는 태그를 기준 위치로 정함 */
}

nav {
    display: flex; /* 부산it501, 한국어 버튼, 로그인 버튼 */
    justify-content: space-between; /* <nav> 안에 <h1>이랑 <div> 사이 공간을 둠*/
    align-items: center;
    padding: 10px 0;
    /* flex-direction: column; */
}

nav .logo {
    font-size: 32px;
    color: #db0001;
    cursor: pointer; /* 커서를 댔을때 손가락모양으로 */

}

nav button {
    border: none;
    outline: 0;
    border-radius: 5px;
    background-color: #db0001;
    color: #fff;
    font-size: 16px;
    padding: 10px 24px;
    margin-left: 10px;
    cursor: pointer;

}

.lang {
    /* inline-flex; flexbox 레이아웃을 적용하면서 요소 자체는 inline 취급 */
    /* flex; : flexbox 레이아웃을 적용하면서 블록 요소로 */
    display: inline-flex;
    align-items: center;
    border: 1px solid #fff;
    background-color: transparent; /* transparent : 투명하게*/

}

.header-content {
    /* absolute 절대위치 ... 기준은? <header> */
    position: absolute; 
    left: 50%;
    top: 50%;

    /* 수직,수평 가운데정렬할 때 자주쓰는방식 */
    /* 원리 : 자기 너비의 50%만큼 왼쪽으로 이동, 
                자기 높이의 50% 만큼 위로 이동 */
    transform: translate(-50%,-50%);
    text-align: center;
}

.header-content h2 {
    font-size: 60px;
    line-height: 1.4;
    font-weight: 600;
    max-width: 650px;
    margin-bottom: 20px;
}

.header-content h3 {
    line-height: 1.4;
    font-weight: 400;
    max-width: 650px;
    margin-bottom: 40px;

}

.add-email {
    background-color: #fff;
    border-radius: 4px;
    margin-top: 40px;
    display: flex;
    align-items: center;
    /* overflow : 요소 내부의 컨텐츠가 크기를 초과할 경우, 초과된 
    부분을 화면에 보이지않게(hidden) 설정. */
    overflow: hidden;

}

.add-email input {
    border: 0;
    outline: 0;
    /* flex: 1; 레이아웃에서 유연하게 공간 분배를 지정하는 단축키 */
    flex: 1;
    margin-left: 20px;
}

.add-email button {
    border: 0;
    background-color: #db0001;
    color: #fff;
    font-size: 16px;
    padding: 15px 30px;
    cursor: pointer;

}

/* 반응형 헤더 부분 작업 */
/* 가로크기가 768px 이하일 경우의 CSS only screen : 오로지 스크린에서만  */
@media only screen and (max-width: 768px) {
    .logo {
        font-size: 20px;
    }
    nav button {
        padding: 5px 10px;
    }
    .lang {
        padding: 4px 8px;
    }
    .header-content {
        /* 초기값 또는 상속값으로 되돌리는 옵션 
            부모로부터 상속이 가능하면 상속받고, 불가능하면 초기값으로 리셋하겠다.*/
        position: unset;
        transform: none;
        padding-top: 150px;
    }
    .header-content h2 {
        font-size: 48px;
        line-height: 50px;
    }
    .header-content h3 {
        font-size: 20px;
        
    }
    .add-email button {
        font-size: 12px;
        padding: 10px 15px;
    }
}

/* 배너 부분 작업 */
.banner-content {
    border-radius: 6px;
    background: linear-gradient(to right, #651c3d 0%, #280a2b 60%);
    padding: 40px;
    margin-bottom: 40px;

}

#banner p {
    font-size: 20px;
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 30px;
}

#banner button,
.membership-content button {
    border: 0;
    outline: 0;
    border-radius: 5px;
    background: rgba(128, 128, 128, 0.4);
    color: #fff;
    padding: 10px 20px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
}

.select-menu {
    border: 1px solid #fff;
    background-color: transparent;
    color: #fff;
    padding: 10px 24px;
    margin-top: 20px;
    font-size: 16px;
}

.select-menu option {
    background-color: #2b2b2b;
    color: #fff;
}

/* 멤버쉽 부분 작업 */
.membership-content {
    border-radius: 6px;
    padding: 60px 40px;
    margin-bottom: 40px;
    /* to right : 진행방향, 왼쪽 -> 오른쪽으로
    rgba(101, 28, 61, 0.9) : 시작 색깔 , 투명도까지 표현
    0% : 그라디언트의 위치 지정
    no-repeat : 이미지 반복하지 않음
    right center : 이미지 위치를 오른쪽 중앙에 정렬 */
    background: linear-gradient(to right, rgba(101, 28, 61, 0.9) 0%,
            rgba(40, 10, 43, 0.5) 60%),
        url(../img/test1.jpg) no-repeat right center;
    /* 만약 배경이미지를 가로 세로 비율을 유지해서 
        자동조정 표현하고싶은경우 => background-size */
    background-size: cover;

}

.membership-content p {
    font-size: 20px;
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 30px;

}

#banner button .membership-content button {
    border: 0;
    outline: 0;
    border-radius: 4px;
    background: rgba(128, 128, 128, 0.4);
    color: #fff;
    padding: 10px 20px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
}

/* 선택 가이드 부분 작업 */

#choice p {
    font-size: 22px;

    /* 투명도 : 0~1인데 0.7이라 하면 70% 불투명, 30% 투명 */
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 20px;
}

.choice-content {
    display: flex;
    flex-wrap: wrap; /* 창이 줄어들면(넘치면) 감싼다*/
    align-items: center;
    gap: 30px;
    
}

.card {
 /* flex : 1 이라는 설정시 포함된 내용의 의미
    동등한 비율 분배에 많이 사용, 
    flex-grow : 여유 공간을 얼마나 차지할지 1로 설정, 다른항목 과 1:1 비율이됨
    flex-shrink : 공간이 줄어들 때 얼마나 줄일지 1로 설정, 같은 비율로 줄어듦
    flex-basis : 초기 크기(기준크기) 0% (기본크기 없음, 처음엔 0부터 시작) */
    flex: 1; 
    border: 0;
    outline: 0;
    border-radius: 10px;
    background: linear-gradient(to bottom, rgba(25, 32, 68, 1) 0%, rgba(32,19,34,1)60%);
    padding: 40px;
    height: 300px;
    position: relative; /* <card>요소가 기준*/
}

.subject-img {
    width: 10px;
    position: absolute;
    bottom: 20px;
    right: 10px;
}

.subject-img img {
    width: 100%;
    height: 50px;
    object-fit: cover; /* 이미지의 비율을 유지하면서 사이즈에맞게*/

}

/* 반응형 선택 가이드 부분 작업 */
@media only screen and (max-width:768px) {
    .card {
        flex-basis: calc(50% - 15px);
    }
}

@media only screen and (min-width:769px)and (max-width:1220px) {
    .card {
        flex-basis: calc(50% - 15px);
    }
}
/* FAQ 부분 작업 */
#faq .accordion {
    width: 100%;
    max-width: 750px;
    margin: 60px auto;

}

.accordion li {
    list-style: none;
    width: 100%;
    padding: 5px;

}

.accordion li label {
    display: flex; /* 컨텐츠가 하나인데 왜 flex를 쓰나? 보통 가운데 정렬을 하기위해서*/
    align-items: center;
    padding: 20px;
    font-size: 25px;
    font-weight: 500;
    background: #303030;
    margin-bottom: 2px;
    cursor: pointer;
    position: relative;

}

/* 가상요소 : html 수정하지 않고 시각적인 효과를 주기위해서 사용함. */
/* 사용하는 방법은 요소 뒤 (::)콜론 2개를 붙여서 사용 */
/* ::after 해당 요소 의 마지막 부분에 콘텐츠를 추가 가능함 */
/* 주의사항. 반드시 content 속성이 있어야 동작함. */
/* <--> ::before 요소 앞쪽에 추가함. */
.accordion li label::after {
    content: '\2b'; /* '\2b : 더하기(+) 그림*/
    font-size: 40px;
    position: absolute;
    right: 20px;
    transition: 0.5s;

}

.accordion input[type="radio"] {
    display: none;

}

.accordion .content {
    background: #3b3b3b;
    font-size: 22px;
    line-height: 1.6;
    text-align: left;
    padding: 0, 20px;
    max-height: 0; /*접히는 효과를 주려고*/
    overflow: hidden;

}

/* input[type="radio"] 체크 하면 */
/* + 바로 다음 형제 요소에 대해서 선택하는 기능. 
결론, 아래의 선택자의 선택은 
 accordion 클래스 하위의 라디오 체크가된 
 라벨 옆에, 콘텐츠만 가리킴*/
/* 선택자	설명
A + B	A 요소 바로 다음에 오는 B 요소
A ~ B	A 뒤에 오는 모든 형제 B 요소
:checked	input, radio, checkbox가 선택된 경우
[type="radio"]	속성 선택자. type이 radio인 요소 대상
input:checked + div	input이 체크되었을 때, 바로 뒤의 div를 제어 */
.accordion input[type="radio"]:checked+label+.content {
    max-height: 600px;
    padding: 30px 20px;
}

.accordion input[type="radio"]:checked+label::after {
    transform: rotate(-135deg);
}

.newsletter {
    padding: 20px 10%;
}

/* footer 부분 작업 */
footer {
    padding: 60px 10%;
}

.footer-content {
    display: flex;
    justify-content: space-between;
    align-items: start;
    gap: 30px;
}

.footer-content a {
    color: rgba(255, 255, 255, 0.7);
    font-size: 16px;
    text-decoration: none;
    
}

.left {
    flex-basis: 60%; /* footer의 플렉스 비율에서 60% 차지함(가로)*/
}

.center, 
.right {
    flex-basis: 20%; /* footer의 플렉스 비율에서 20% 차지함(가로)*/
    vertical-align: top;

}

.col h2 {
    color: rgba(255, 255, 255, 0.7);
    font-size: 32px;
    margin-bottom: 20px;
}

.col h3 {
    color: rgba(255, 255, 255, 0.7);
    font-size: 26px;
    margin-bottom: 20px;
}

.footer-nav {
    display: flex;
    justify-content: start; /* 왼쪽정렬 */
    align-items: center;
    gap: 20px;
    list-style: none;

    margin-bottom: 40px;
}

/* .footer-nav 안에 li 요소 중에서 마지막 요소를 제외한 전체 요소에 대해서  */
.footer-nav li:not(:last-child) {
    padding-right: 20px;
    border-right: 1px solid #eee;

}

.footer-info {
    margin-top: 20px;
    color: rgba(255, 255, 255, 0.7);

}

.socials {
    list-style: none;
    display: flex;
    justify-content: start;
    align-items: center;
    gap: 10px;

}

.socials a {
    color: rgba(255, 255, 255, 0.7);
    font-size: 16px;
}

.copyright {
    margin-top: 20px;
    color: rgba(255, 255, 255, 0.7);
    font-size: 16px;
}

.footer-content p {
    font-size: 14px;
    line-height: 0.6;
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 20px;

}

/* 반응형 footer 부분 작업 */
@media only screen and (max-width: 768px){
    .footer-content {
        display: flex;
        flex-direction: column;
    }

    .col {
        flex-basis: 100%;
    }

    .col h2 {
        color: rgba(255, 255, 255, 0.7);
        font-size: 28px;
        margin-bottom: 20px;
    }
    .col h2 {
        color: rgba(255, 255, 255, 0.7);
        font-size: 18px;
        margin-bottom: 20px;
    }
    
}
    
